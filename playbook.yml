---
- name: Manually install Homebrew via git
  hosts: localhost
  #hosts: all
  connection: local
    #become: yes
    #become_user: "{{ ansible_user_id }}"
  # yes might fail in a minimal docker env
  gather_facts: yes
  vars:
    homebrew_user: "{{ ansible_user_id }}" # #"{{ ansible_user_id }}" #homebrew_user: "{{ lookup('env', 'USER') }}"
    homebrew_git_repo: https://github.com/Homebrew/brew
    homebrew_release: master  # or a tag like 4.2.0
    brew_formulae: 
      - neovim
      - asdf
      - ca-certificates
      # - colima
      # - delve
      - docker
      - docker-completion
      - gettext
      - git
      - git-filter-repo
      - htop
      - lazydocker
      - lazygit
      - libevent
      - libunistring
      - libuv
      - lima
      - lpeg
      - luajit
      - luv
      - mpdecimal
      - ncurses
      - nvm
      - openssl@3
      - pcre2
      - python@3.13
      - readline
      - ripgrep
      - sqlite
      - starship
      - stow
      - tmux
      - tree-sitter
      - unibilium
      - utf8proc
      - xz
      - zsh-autocomplete
      - zsh-autosuggestions
      - zsh-syntax-highlighting
      - zsh-vi-mode


  tasks:

    - name: Ensure /home/linuxbrew/.linuxbrew exists
      become: yes
      file:
        path: "/home/linuxbrew/.linuxbrew"
        state: directory
        owner: "{{ homebrew_user }}"
        group: "{{ homebrew_user }}"
        mode: '0755'
      tags:
      - brew

    - name: Clone Homebrew GitHub repo
      ansible.builtin.git:
        repo: "{{ homebrew_git_repo }}"
        dest: "/home/linuxbrew/.linuxbrew/Homebrew"
        version: "{{ homebrew_release }}"
      become_user: "{{ homebrew_user }}"
      tags:
      - brew

    - name: Create bin directory for brew
      ansible.builtin.file:
        path: "/home/linuxbrew/.linuxbrew/bin"
        state: directory
        owner: "{{ homebrew_user }}"
        group: "{{ homebrew_user }}"
      tags:
      - brew

    - name: Create a symbolic link for brew
      ansible.builtin.file:
        src: "/home/linuxbrew/.linuxbrew/Homebrew/bin/brew"
        dest: "/home/linuxbrew/.linuxbrew/bin/brew"
        owner: "{{ homebrew_user }}"
        group: "{{ homebrew_user }}"
        state: link
      tags:
      - brew

    - name: Add brew to .bashrc
      become: false
      lineinfile:
        path: "/home/{{ homebrew_user }}/.bashrc"
        line: 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"'
        insertafter: EOF
      tags:
      - brew

    - name: Install Formula
      community.general.homebrew:
        name: "{{ brew_formulae }}"
        state: present
        path: "/home/linuxbrew/.linuxbrew/bin"
      become_user: "{{ homebrew_user }}"
      become: yes
      # tags:
      # - brew-install

    #TEST

    - name: Check if Homebrew package is already installed
      ansible.builtin.shell: |
        brew list --formula {{ item }}
      register: brew_check_results
      failed_when: false
      changed_when: false
      loop: "{{ brew_formulae }}"
      loop_control:
        label: "{{ item }}"
      tags: 
        - brew-install

    - name: Install each package with --build-from-source if not already installed
      ansible.builtin.shell: |
        brew install --build-from-source {{ item }}
      when: brew_check_results.results[loop.index0].rc != 0
      loop: "{{ brew_formulae }}"
      loop_control:
        label: "{{ item }}"
      args:
        executable: /bin/bash
      tags: 
        - brew-install

    - name: Ensure ~/dotfiles directory exists
      become: yes
      file:
        path: "/home/{{ homebrew_user }}/dotfiles/config/"
        state: directory
        owner: "{{ homebrew_user }}"
        group: "{{ homebrew_user }}"
        mode: '0755'
      tags:
      - dotfiles

    - name: Copy config dotfiles packages to user's home
      copy:
        src: "./config/.config/{{ item }}"
        dest: "/home/{{ homebrew_user }}/dotfiles/config"
        owner: "{{ homebrew_user }}"
        group: "{{ homebrew_user }}"
        mode: preserve
      loop:
        - alacritty
        - htop  
        - nvim
        # - git
        # - vim
        # - tmux
      tags:
      - dotfiles

    - name: Ensure ~/.config directory exists
      become: yes
      file:
        path: "/home/{{ homebrew_user }}/.config/"
        state: directory
        owner: "{{ homebrew_user }}"
        group: "{{ homebrew_user }}"
        mode: '0755'
      tags:
      - dotfiles

    - name: Run stow with Homebrew path
      shell: |
        export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
        cd ~/dotfiles
        stow config --target /home/{{ homebrew_user }}/.config --verbose=2
      args:
        executable: /bin/bash  # optional: in case your system prefers zsh
      tags:
      - dotfiles

    - name: Copy config dotfiles packages to user's home
      copy:
        src: "./{{ item }}"
        dest: "/home/{{ homebrew_user }}/dotfiles"
        owner: "{{ homebrew_user }}"
        group: "{{ homebrew_user }}"
        mode: preserve
      loop:
        - git
        - tmux
        - vim
        - zsh
      tags:
      - dotfiles

    - name: Run stow with Homebrew path
      shell: |
        export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
        cd ~/dotfiles
        stow git tmux vim zsh --target /home/{{ homebrew_user }} --verbose=2
      args:
        executable: /bin/bash  # optional: in case your system prefers zsh
      tags:
      - stow

    - name: Install Oh My Zsh # noqa: latest
      ansible.builtin.git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: ~/.oh-my-zsh
        depth: 1
      tags:
      - ohmyzsh

    - name: Update apt cache
      become: true
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"
      tags:
      - zsh

    - name: Install ZSH
      become: true
      ansible.builtin.package:
        name: zsh
        state: present
      tags:
      - zsh

    - name: Change user shell to zsh
      become: true
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        shell: /bin/zsh
      tags:
      - zsh
